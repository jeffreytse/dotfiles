# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

#############################
# Shell Options
#############################

#== History ==
#
# Append history to the history file (no overwriting)
setopt appendhistory
# Share history across terminals
setopt sharehistory
# Immediately append to the history file, not just when a term is killed
setopt incappendhistory
# Remove superfluous blanks from each command line being added to the history
# list
setopt histreduceblanks
# Remove command lines from the history list when the first character on the
# line is a space, or when one of the expanded aliases contains a leading space
setopt histignorespace
# Do not enter command lines into the history list if they are duplicates of the
# previous event.
setopt histignorealldups
# Add a bit more data (timestamp in unix epoch time and elapsed time of the command)
# setopt extended_history

#== Directory ==
#
# Switching directories for lazy people
setopt autocd
# See: http://zsh.sourceforge.net/Intro/intro_6.html
setopt autopushd pushdminus pushdsilent pushdtohome pushdignoredups
# Don't kill background jobs when I logout
# setopt nohup
# See: http://zsh.sourceforge.net/Intro/intro_2.html
setopt extendedglob
# Do not require a leading '.' in a filename to be matched explicitly
# setopt globdots

#== Input/Output ==
#
# Automatically use menu completion after the second consecutive request for
# completion
setopt automenu
# If the argument to a cd command (or an implied cd with the AUTO_CD option set)
# is not a directory, and does not begin with a slash, try to expand the
# expression as if it were preceded by a '~'
setopt cdablevars
# Try to make the completion list smaller (occupying less lines) by printing
# the matches in columns with different widths
setopt listpacked
# Don't show types in completion lists
setopt nolisttypes
# If a completion is performed with the cursor within a word, and a full
# completion is inserted, the cursor is moved to the end of the word
setopt alwaystoend
# Not correct the spelling of commands
setopt nocorrect nocorrectall
# Disable beep
setopt nobeep
# Get rid of "No match found" when running commands
# https://github.com/robbyrussell/oh-my-zsh/issues/449
setopt no_nomatch
# Don't ask for confirmation on rm *
setopt rmstarsilent
# Allow comments inside commands
# setopt interactivecomments
# Report the status of background jobs immediately, rather than waiting until
# just before printing a prompt.
setopt notify
# Display PID when using jobs
setopt longlistjobs
# Perform implicit tees or cats when multiple redirections are attempted
setopt multios
# Use vi key bindings in ZSH
# setopt vi

#############################
# Zinit Plugin Manager
#############################

## Added by Zinit's installer
if [[ ! -f $HOME/.zinit/zinit.zsh ]]; then
    print -P "%F{33}▓▒░ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})…%f"
    command mkdir -p "$HOME/.zinit" && command chmod g-rwX "$HOME/.zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.zinit" && \
        print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
        print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi

source "$HOME/.zinit/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust

### End of Zinit's installer chunk

# git
zinit snippet OMZP::git
zinit snippet OMZP::git-extras
zinit light k4rthik/git-cal

# nodejs
zinit snippet OMZP::node
zinit snippet OMZP::npm

# ruby
zinit snippet OMZP::ruby
zinit snippet OMZP::rails
zinit snippet OMZP::bundler
zinit snippet OMZP::rake
zinit snippet OMZP::gem

# docker
zinit snippet OMZP::docker-compose

# others
zinit snippet OMZP::history
zinit snippet OMZP::textmate
zinit snippet OMZP::lighthouse
zinit snippet OMZP::tmux
zinit snippet OMZP::fancy-ctrl-z
zinit snippet OMZP::common-aliases

# zinit ice lucid wait
# zinit snippet OMZP::sudo

zinit ice lucid wait
zinit snippet OMZP::fzf

zinit light agkozak/zsh-z

zinit light zsh-users/zsh-history-substring-search
zinit light zsh-users/zsh-autosuggestions
zinit light zdharma-continuum/fast-syntax-highlighting

zinit light b4b4r07/zplug-doctor
zinit light b4b4r07/zplug-cd
zinit light b4b4r07/zplug-rm

zvm_config() {
  ZVM_LINE_INIT_MODE=$ZVM_MODE_INSERT
}

zinit light jeffreytse/zsh-vi-mode

# # Can manage everything e.g., other person's zshrc
# zinit ice pick"async.zsh" src"zshrc"
# zinit light tcnksm/docker-alias
# 
# # Also prezto
# zinit snippet PZTM::prompt
# 
# # theme
# zinit light dracula/zsh

# zinit light denysdovhan/spaceship-prompt

# zinit ice pick"async.zsh" src"pure.zsh"
# zinit light sindresorhus/pure

### End of Zinit's installer chunk

#############################
# Common Functions
#############################

# Functions Autoloading
fpath=(~/.zsh $fpath)

# Completion
autoload -U promptinit && promptinit
autoload -U compinit compdef && compinit

#############################
# Common Environment Vars
#############################

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# History
export HISTFILE=$HOME/.zsh_history
export HISTSIZE=100000
export SAVEHIST=100000
#export WORDCHARS='*?_-.[]~=&;!#$%^(){}<>'

# You may need to manually set your language environment
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# asdf-vm
source $HOME/.asdf/asdf.sh
fpath=(${ASDF_DIR}/completions $fpath)

# snap bin for ubuntu
if [ -d "/snap/bin" ]; then
  export PATH="$PATH:/snap/bin"
fi

# fzf bin
export FZF_BASE="$(asdf where fzf)"

# composor bin
export PATH="$PATH:$(asdf where php)/.composer/vendor/bin"

# python bin
export PATH="$PATH:$(asdf where python)/bin"

# dotnet bin
export PATH="$PATH:$(asdf where dotnet-core)"

# dotnet tools
export PATH="$PATH:$HOME/.dotnet/tools"

# perl bin
export PATH="$PATH:$(asdf where perl)/bin"

# Others
export PATH="$PATH:$HOME/.local/bin"

# java home
export JAVA_HOME="$(asdf where java)"

# pnpm
export PNPM_HOME="$HOME/.local/share/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac

# Set default editor
export VISUAL="$(command -v nvim)"
export EDITOR="$VISUAL"

#############################
# Personal Alias
#############################

# Set personal aliases
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"

# Tmux commands
alias tmux-restore='tmux attach || { (while ! tmux run-shell ~/.tmux/plugins/tmux-resurrect/scripts/restore.sh; do sleep 0.2; done)& tmux ; }'
alias mux=tmuxinator

#############################
# Others
#############################

test -e "${HOME}/.iterm3_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

eval $(thefuck --alias)

eval "$(starship init zsh)"

eval "$(z init zsh)"

# Clean filesystem user watches
function fs-watcher-clean() {
    if [[ "$OSTYPE" == "darwin"* ]]; then
        sudo sysctl -w kern.maxfiles=524288
        sudo sysctl -w kern.maxfilesperproc=524288
    elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
        sudo sysctl -n -w fs.inotify.max_queued_events=524288
        sudo sysctl -n -w fs.inotify.max_user_instances=512
        sudo sysctl -n -w fs.inotify.max_user_watches=524288
    fi
}

# Everything else will be loaded by zshenv (autoload) as this file is loaded in a non-interactive session
